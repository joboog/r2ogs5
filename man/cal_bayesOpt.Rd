% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cal_bayesOpt.R
\name{cal_bayesOpt}
\alias{cal_bayesOpt}
\title{Bayesian Optimization for OGS5 models}
\usage{
cal_bayesOpt(
  par_init,
  kappa = "log_t",
  max_it,
  exp_data,
  ogs5_obj,
  outbloc_names,
  ogs_exe,
  target_function,
  ensemble_path,
  scale_which = NULL,
  scale_fun = I,
  unscale_fun = I
)
}
\arguments{
\item{par_init}{\emph{tibble} with initial parameters to start calibration.
It needs to follow a strict format and is best created with the function
\code{\link[=cal_sample_parameters]{cal_sample_parameters()}}. See details for more.}

\item{kappa}{\emph{character} or \emph{numeric} that determines the tuning parameter that weights
exploitation versus exploration. If set to default\code{"log_t"} then
\eqn{\kappa = 0.2dlog(2d)}.}

\item{max_it}{\emph{numeric} maximum number of BO iterations.}

\item{exp_data}{calibration data that will be used in the target function.}

\item{ogs5_obj}{\emph{ogs5} base simulation object.}

\item{outbloc_names}{\emph{character vector} names of the blocs specified in the
*\emph{.out} file that should be used for calibration. The argument will be passed
to the function \code{\link[=ogs5_get_output_specific]{ogs5_get_output_specific()}}.}

\item{ogs_exe}{\emph{character} path to the ogs executable.}

\item{target_function}{\emph{function} specified by the user that should exist in
the global environment and be of the form \verb{f <- function(ogs_obj, exp_data) \{ ... return(sim_error) \}}.}

\item{ensemble_path}{\emph{character} path where ensemble for initial parameters
should be written and run.}

\item{scale_which}{\emph{character} that identifies the parameters in
\code{par_init} that should be scaled. Default is \emph{NULL}, then all parameters
will be scaled according to \emph{scale_fun}.}

\item{scale_fun}{\emph{function} that allows sampling from a scaled distribution, e.g.
if the values are on a \emph{log} scale. Default is \code{I()} i.e. no transformation.}

\item{unscale_fun}{\emph{function} inverse of the previous function to transform
parameters back after sampling. Default is \code{I()} as well.}
}
\value{
A \emph{list} with
\describe{
\item{gp_model}{The final Gaussian-Process model object (library \code{GPfit})}
\item{values}{Parameters from \emph{(0, 1)} used as dependent variables in \emph{gp_model}}
\item{sim_errors}{Simulation errors used as independent variable in \emph{gp_model}}
\item{min}{Parameter where the smallest simulation error was found.}
\item{regret}{Vector of squared differences between meta model prediction and
subsequent simulation for the queried parameters.}
}
}
\description{
Implementation of the Bayesian Optimization algorithm to find an
approximate minimum of a user specified function, usually the mean squared error
between simulation results and experiment.
}
\details{
Bayesian optimization as proposed by \emph{Mockus et al. (1978)} with the
Lower Confidence Bound acquisition function to balance Exploration and Exploitation
as in \emph{P. Auer (2002)}. In brief, a Gaussian Process model implementation by
\emph{Macdonald et al. (2015)} is used as a surrogate model to explore the parameter
space in search for points where the model is either uncertain and/or predicts
a minimum. If \code{kappa} is set to \code{"log_t"}, the weight on Exploration is incremented
logarithmically with every iteration. The Algorithm stops, if the relative variability
of prediction errors from the surrogate model (relative regret variance) is
small enough or the specified maximum number of iteration (\code{max_it}) is reached.

The \code{par_init} data frame should look like this:\tabular{lllllllll}{
   file_ext \tab mkey \tab skey \tab spec \tab min \tab max \tab 1 \tab 2 \tab ... \cr
   mmp \tab MEDIUM_PROPERTIES1 \tab POROSITY \tab 1 \tab 0.25 \tab 0.45 \tab 0.4 \tab 0.3 \tab ... \cr
   mmp \tab Medium_PROPERTIES2 \tab ... \tab  \tab  \tab  \tab  \tab  \tab  \cr
}


If a parameter has two values that should be calibrated, simply two identical
parameter specifications (with different min/max values) should be provided
in adjacent rows.

The initial parameter set can be created with the functions
\code{\link[=cal_create_calibration_set]{cal_create_calibration_set()}} and \code{\link[=cal_sample_parameters]{cal_sample_parameters()}}.

Analogous to the \code{calibration_set}, every row is a parameter with its location
in the \code{ogs5} object specified in the first few columns.
Additional specifications to the parameter can be added in \emph{spec},
but it can also left blank. Following, \emph{min} and \emph{max} should be indicated
and thereafter  the starting values for the parameter.
}
\examples{
r2ogs/examples/bayesOpt_example.R

}
\references{
Toward global optimization
\emph{Mockus, Jonas and Tiesis, Vytautas and Zilinskas, Antanas,}
\strong{1978} volume 2, chapter Bayesian Methods for Seeking the Extremum, pp. 117â€“128.

Using Confidence Bounds for Exploitation-Exploration Trade-offs
\emph{P. Auer} \strong{2002} Journal of Machine Learning Research 3, 397-422

GPfit: An R package for fitting a Gaussian process model to deterministic simulator outputs
\emph{Macdonald, Blake and Ranjan, Pritam and Chipman, Hugh}
\strong{2012} Journal of Statistical Software, 64, issue 12
}
